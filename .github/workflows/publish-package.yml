name: Publish package to NPM
on:
  push:
    tags:
      - v*
  workflow_dispatch:
    inputs:
      tag:
        description: "Tag name"
        required: true
        type: string
env:
  TAG_NAME: ${{ inputs.tag || github.ref_name }}
jobs:
  bump-version:
    name: Bump version in package.json
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: refs/tags/${{ env.TAG_NAME }}

      - name: Change version in package.json
        uses: jossef/action-set-json-field@v2
        with:
          file: package.json
          field: version
          value: ${{ env.TAG_NAME }}

      - name: Print package.json
        run: cat package.json

      - name: Create Pull Request for new version
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "Bump version to ${{ env.TAG_NAME }}"
          branch: "auto-version-${{ env.TAG_NAME }}"
          base: main
          title: "Bump version to ${{ env.TAG_NAME }}"
          body: "Automated pull requested created because a tag with the name ${{ env.TAG_NAME }} was pushed to the repo."
  build:
    needs: bump-version
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      # Checkout branch that was created in previous job
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: "auto-version-${{ env.TAG_NAME }}"

      - name: Install pnpm
        uses: pnpm/action-setup@v4

      # Setup .npmrc file to publish to npm
      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: "18.x"
          registry-url: "https://registry.npmjs.org"
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build
        run: pnpm build:lib

      - name: Publish to NPM
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
